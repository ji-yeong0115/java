/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.56
 * Generated at: 2020-07-06 02:39:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.kh.wsp.member.model.vo.Member;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/views/common/header.jsp", Long.valueOf(1594003149952L));
    _jspx_dependants.put("/WEB-INF/views/common/footer.jsp", Long.valueOf(1593739183242L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.kh.wsp.member.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("  <style>\r\n");
      out.write("      .bg-image-full {\r\n");
      out.write("        background: no-repeat center center scroll;\r\n");
      out.write("        -webkit-background-size: cover;\r\n");
      out.write("        -moz-background-size: cover;\r\n");
      out.write("        background-size: cover;\r\n");
      out.write("        -o-background-size: cover;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      div.bg-image-full{\r\n");
      out.write("        height: 300px;\r\n");
      out.write("        text-align: center;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      @font-face { font-family: 'GmarketSansBold'; src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2001@1.1/GmarketSansBold.woff') format('woff'); font-weight: normal; font-style: normal; }\r\n");
      out.write("      div.bg-image-full>h1{\r\n");
      out.write("        color : white;\r\n");
      out.write("        position: relative;\r\n");
      out.write("        top : 75px;\r\n");
      out.write("        font-size: 3em;\r\n");
      out.write("        font-family: 'GmarketSansBold';\r\n");
      out.write("        text-shadow: -2px 0 black, 0 2px black, 2px 0 black, 0 -2px black;\r\n");
      out.write("      }\r\n");
      out.write("  </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\r\n");
 
	// Session에 저장되어 있는 login 정보를 가져와 loginMember 변수에 저장
	Member loginMember = (Member)session.getAttribute("loginMember");
	
	// 쿠키에 저장된 saveId 꺼내오기
	boolean isSave = false; // 아이디 저장 체크박스  값을 수정하기 위한 변수
	String saveId = ""; // 쿠키에 저장된 아이디를 저장할 변수
	
	Cookie[] cookies = request.getCookies(); // 요청 주소와 관련된 쿠키를 모두 얻어옴
	
	if(cookies != null){
		for(Cookie c : cookies){
			if("saveId".equals(c.getName())){ 
				// 얻어온 쿠키의 이름(key)가 "saveId"와 같은 쿠키를 찾음
				saveId = c.getValue(); // saveId 변수에 쿠키에 저장된 value를 저장
				isSave = true;
			}
		}
	}

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"utf-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("  <title>WebServer Project</title>\r\n");
      out.write("  \r\n");
      out.write("  <!-- Bootstrap core CSS -->\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\">\r\n");
      out.write("\r\n");
      out.write("\t<style>\r\n");
      out.write("\t     body {\r\n");
      out.write("\t       padding-top: 56px;\r\n");
      out.write("\t     }\r\n");
      out.write("\t     \r\n");
      out.write("\t </style>\r\n");
      out.write("\t \r\n");
      out.write("   <!-- sweetalert : alert창을 꾸밀 수 있게 해주는 라이브러리 https://sweetalert.js.org/ -->\r\n");
      out.write("  \t<script src=\"https://unpkg.com/sweetalert/dist/sweetalert.min.js\"></script>\r\n");
      out.write("\t \r\n");
      out.write(" \t<script>\r\n");
      out.write(" \t\t/*** 이전 페이지에서 전다받은 내용을 alert 창으로 표시하기 ***/\r\n");
      out.write(" \t\t");

 			String msg = (String)(request.getSession().getAttribute("msg")); 		
 			String status = (String)(request.getSession().getAttribute("status")); 		
 			String text = (String)(request.getSession().getAttribute("text")); 		
 		
      out.write("\r\n");
      out.write(" \t\t\r\n");
      out.write(" \t\t");
 if(msg != null) {
      out.write("\r\n");
      out.write("\t\t \t\tswal({\r\n");
      out.write("\t\t \t\t\ticon : \"");
      out.print(status);
      out.write("\",\r\n");
      out.write("\t\t \t\t\ttitle : \"");
      out.print(msg);
      out.write("\",\r\n");
      out.write("\t\t \t\t\ttext : \"");
      out.print(text);
      out.write("\"\r\n");
      out.write("\t \t\t\t}); \t\t\r\n");
      out.write(" \t\t");

 			// Session에 존자해는 특정 키 값의 속성 제거
	 			session.removeAttribute("msg");
	 			session.removeAttribute("status");
	 			session.removeAttribute("text");
 			}
 		
      out.write("\r\n");
      out.write(" \t\t\r\n");
      out.write("\t</script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- Navigation으로 된 header -->\r\n");
      out.write("\t<div class=\"header navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t<a class=\"navbar-brand\" href=\"");
      out.print(request.getContextPath());
      out.write("\">WebServer Project</a>\r\n");
      out.write("\t\t\t<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("\t\t\t\t<span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("\t\t\t</button>\r\n");
      out.write("\t\t\t<div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n");
      out.write("\t\t\t\t<ul class=\"navbar-nav ml-auto\">\r\n");
      out.write("\t\t\t\t  <li class=\"nav-item\">\r\n");
      out.write("\t\t\t\t    <a class=\"nav-link\" href=\"#\">Notice</a>\r\n");
      out.write("\t\t\t\t  </li>\r\n");
      out.write("\t\t\t\t  <li class=\"nav-item\">\r\n");
      out.write("\t\t\t\t    <a class=\"nav-link\" href=\"#\">Notice(exercise)</a>\r\n");
      out.write("\t\t\t\t  </li>\r\n");
      out.write("\t\t\t\t  <li class=\"nav-item\">\r\n");
      out.write("\t\t\t\t    <a class=\"nav-link\" href=\"#\">Board</a>\r\n");
      out.write("\t\t\t\t  </li>\r\n");
      out.write("\t\t\t\t  <li class=\"nav-item\">\r\n");
      out.write("\t\t\t\t    <a class=\"nav-link\" href=\"#\">Board(exercise)</a>\r\n");
      out.write("\t\t\t\t  </li>\r\n");
      out.write("\t\t\t\t  \r\n");
      out.write("\t\t\t\t  ");
      out.write("\r\n");
      out.write("\t\t\t\t  ");
 if(loginMember == null){ 
      out.write("\r\n");
      out.write("\t\t\t\t  <li class=\"nav-item active\">\r\n");
      out.write("\t\t\t\t    <a class=\"nav-link\" data-toggle=\"modal\" href=\"#modal-container-1\">Login</a>\r\n");
      out.write("\t\t\t\t  </li>\r\n");
      out.write("\t\t\t\t  \r\n");
      out.write("\t\t\t\t  ");
}else { 
      out.write("\r\n");
      out.write("\t\t\t\t  <li class=\"nav-item active\">\r\n");
      out.write("\t\t\t\t    <a class=\"nav-link\" href=\"");
      out.print(request.getContextPath());
      out.write("/member/myPage.do\">");
      out.print(loginMember.getMemberName() );
      out.write("</a>\r\n");
      out.write("\t\t\t\t  </li>\t\t\t\t\t  \r\n");
      out.write("\t\t\t\t  <li class=\"nav-item active\">\r\n");
      out.write("\t\t\t\t    <a class=\"nav-link\" href=\"");
      out.print(request.getContextPath());
      out.write("/member/logout.do\">Logout</a>\r\n");
      out.write("\t\t\t\t  </li>\t\t\t\t  \t\r\n");
      out.write("\t\t\t\t  ");
} 
      out.write("\r\n");
      out.write("\t\t\t\t  \r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("\t<div class=\"modal fade\" id=\"modal-container-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("\t\t<div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("\t\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t\t<h5 class=\"modal-title\" id=\"myModalLabel\">로그인 모달창</h5>\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\">\r\n");
      out.write("\t\t\t\t\t\t<span aria-hidden=\"true\">×</span>\r\n");
      out.write("\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t\t<form class=\"form-signin\" method=\"POST\" action=\"");
      out.print(request.getContextPath());
      out.write("/member/login.do\"\r\n");
      out.write("\t\t\t\t\t\tonsubmit=\"return loginValidate();\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"memberId\" name=\"memberId\" placeholder=\"아이디\"\r\n");
      out.write("\t\t\t\t\t\tvalue=\"");
      out.print(saveId);
      out.write("\"> <br>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<input type=\"password\" class=\"form-control\" id=\"memberPwd\" name=\"memberPwd\"\r\n");
      out.write("\t\t\t\t\t\t\tplaceholder=\"비밀번호\"> <br>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"checkbox mb-3\">\r\n");
      out.write("\t\t\t\t\t\t\t<label> \r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"saveId\" ");
      out.print(isSave ? "checked" : "" );
      out.write("> 아이디 저장\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t</label>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">로그인</button>\r\n");
      out.write("\t\t\t\t\t\t<a class=\"btn btn-lg btn-secondary btn-block\" \r\n");
      out.write("\t\t\t\t\t\t\thref=\"");
      out.print(request.getContextPath());
      out.write("/member/signUpForm.do\">회원가입</a>\r\n");
      out.write("\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"btn btn-secondary\"\r\n");
      out.write("\t\t\t\t\t\tdata-dismiss=\"modal\">Close</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- Bootstrap core JS -->\r\n");
      out.write("\t<script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("\t<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\" integrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\t<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js\" integrity=\"sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\r\n");
      out.write("\t\t// 로그인 유효성 검사\r\n");
      out.write("\t\t// -> 아이디, 비밀번호 중 하나라도 입력되지 않으면 form 태그 기본 이벤트를 제거\r\n");
      out.write("\t\tfunction loginValidate(){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif ($(\"#memberId\").val().trim() == \"\"){\r\n");
      out.write("\t\t\t\talert(\"아이디를 입력해주시요.\");\r\n");
      out.write("\t\t\t\t$(\"#memberId\").focus();\r\n");
      out.write("\t\t\t\treturn false; // 기본이벤트 제거\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif ($(\"#memberPwd\").val().trim() == \"\"){\r\n");
      out.write("\t\t\t\talert(\"비밀번호를 입력해주시요.\");\r\n");
      out.write("\t\t\t\t$(\"#memberPwd\").focus();\r\n");
      out.write("\t\t\t\treturn false; // 기본이벤트 제거\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<!-- 메인 화면 이미지 -->\r\n");
      out.write("\t<div class=\"py-5 bg-image-full\" style=\"background-image: url('https://iei.or.kr/resources/images/intro/intro_bg.jpg');\">\r\n");
      out.write("\t    <h1>Servlet/JSP를 이용한 Web Application</h1>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- 내용 작성 부분 -->\r\n");
      out.write("\t<div class=\"py-5\">\r\n");
      out.write("\t  <div class=\"container\">\r\n");
      out.write("\t    <h1>Section Heading</h1>\r\n");
      out.write("\t    <p class=\"lead\">Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>\r\n");
      out.write("\t    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquid, suscipit, rerum quos facilis repellat architecto commodi officia atque nemo facere eum non illo voluptatem quae delectus odit vel itaque amet.</p>\r\n");
      out.write("\t  </div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"py-5\">\r\n");
      out.write("\t  <div class=\"container\">\r\n");
      out.write("\t    <h1>Section Heading</h1>\r\n");
      out.write("\t    <p class=\"lead\">Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>\r\n");
      out.write("\t    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquid, suscipit, rerum quos facilis repellat architecto commodi officia atque nemo facere eum non illo voluptatem quae delectus odit vel itaque amet.</p>\r\n");
      out.write("\t  </div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<!-- Footer -->\r\n");
      out.write("\t<div class=\"py-5 bg-dark footer\">\r\n");
      out.write("\t  <div class=\"container\">\r\n");
      out.write("\t    <p class=\"m-0 text-center text-white\">Copyright &copy; KH Information Educational Institute A-Class</p>\r\n");
      out.write("\t  </div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
